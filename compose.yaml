services:

  # App
  app:
    image: pong-hawk-backend
    build: .
    command: gunicorn config.wsgi:application --bind 0.0.0.0:7000
    env_file:
      - .env.sample
    environment:
      - DEBUG=False
    depends_on:
      - postgres
    volumes:
      - static_volume:/home/python/app/static/
      - media_volume:/home/python/app/storage/
    network_mode: "host"


  # Deploy commands: migrate and collectstatic
  # Migration
  migration:
    image: pong-hawk-backend
    env_file:
      - .env.sample
    environment:
      - DEBUG=False
    command: python manage.py migrate
    depends_on:
        - postgres
        - app
    network_mode: "host"


  # Collectstatic
  collectstatic:
    image: pong-hawk-backend
    env_file:
      - .env.sample
    environment:
      - DEBUG=False
    command: python manage.py collectstatic --noinput
    volumes:
      - static_volume:/home/python/app/static/
      - media_volume:/home/python/app/storage/
    depends_on:
      - app
    network_mode: "host"


  # Postgres 15 DB
  postgres:
    image: postgres:15-alpine
      # PostgreSQL database path on host machine
    volumes:
        - postgres_data:/var/lib/postgresql/data
        - ./db:/docker-entrypoint-initdb.d/
    env_file:
      - .env.sample
    environment:
      - DEBUG=False
    restart: unless-stopped
    ports:
        - "5432:5432"

  # Backend Nginx
  backend-nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static/:ro
      - media_volume:/app/storage/:ro
    depends_on:
      - app
    network_mode: "host"

    # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.12-alpine
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=pong
      - RABBITMQ_DEFAULT_PASS=hawk
    ports:
      - "5672:5672"
    volumes:
        # Config file
        - ./rabbitmq.conf:/etc/rabbitmq/conf.d/10-defaults.conf
        # RabbitMQ Mnesia database
        - rabbitmq_data:/var/lib/rabbitmq/mnesia/:rw

  # Celery worker
  celery:
    image: pong-hawk-backend
    env_file:
      - .env.sample
    environment:
      - DEBUG=False
    command: celery -A config worker -l INFO
    depends_on:
        - postgres
        - app
    network_mode: "host"
    volumes:
      - static_volume:/home/python/app/static/
      - media_volume:/home/python/app/storage/

volumes:
  media_volume:
  postgres_data:
  rabbitmq_data:
  static_volume:
